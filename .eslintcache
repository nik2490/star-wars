[{"/mnt/d/ipsator/experiments/xebia/star-wars/src/index.js":"1","/mnt/d/ipsator/experiments/xebia/star-wars/src/reportWebVitals.js":"2","/mnt/d/ipsator/experiments/xebia/star-wars/src/App.js":"3","/mnt/d/ipsator/experiments/xebia/star-wars/src/api/index.js":"4","/mnt/d/ipsator/experiments/xebia/star-wars/src/components/login/index.js":"5","/mnt/d/ipsator/experiments/xebia/star-wars/src/atoms/Input.js":"6","/mnt/d/ipsator/experiments/xebia/star-wars/src/components/logo/StarWarsLogo.js":"7","/mnt/d/ipsator/experiments/xebia/star-wars/src/components/login/Login.js":"8","/mnt/d/ipsator/experiments/xebia/star-wars/src/atoms/RoundedButton.js":"9","/mnt/d/ipsator/experiments/xebia/star-wars/src/hooks/useUserData.js":"10","/mnt/d/ipsator/experiments/xebia/star-wars/src/services/StorageService.js":"11","/mnt/d/ipsator/experiments/xebia/star-wars/src/services/UserService.js":"12","/mnt/d/ipsator/experiments/xebia/star-wars/src/components/dashboard/index.js":"13","/mnt/d/ipsator/experiments/xebia/star-wars/src/components/dashboard/SerachBar.js":"14","/mnt/d/ipsator/experiments/xebia/star-wars/src/services/PlanetService.js":"15","/mnt/d/ipsator/experiments/xebia/star-wars/src/store/index.js":"16","/mnt/d/ipsator/experiments/xebia/star-wars/src/reducers/index.js":"17","/mnt/d/ipsator/experiments/xebia/star-wars/src/constants/actionTypes/PlanetActionTypes.js":"18","/mnt/d/ipsator/experiments/xebia/star-wars/src/reducers/PlanetReducer.js":"19","/mnt/d/ipsator/experiments/xebia/star-wars/src/actions/planetActions.js":"20","/mnt/d/ipsator/experiments/xebia/star-wars/src/hooks/useMatchedText.js":"21","/mnt/d/ipsator/experiments/xebia/star-wars/src/utils/StringUtils.js":"22","/mnt/d/ipsator/experiments/xebia/star-wars/src/constants/planets/PopulationRamge.js":"23","/mnt/d/ipsator/experiments/xebia/star-wars/src/utils/SortUtils.js":"24","/mnt/d/ipsator/experiments/xebia/star-wars/src/hooks/useValidator.js":"25"},{"size":500,"mtime":1609584227613,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1609584227629,"results":"28","hashOfConfig":"27"},{"size":568,"mtime":1610275816738,"results":"29","hashOfConfig":"27"},{"size":699,"mtime":1610259908426,"results":"30","hashOfConfig":"27"},{"size":371,"mtime":1610297359861,"results":"31","hashOfConfig":"27"},{"size":341,"mtime":1610287253356,"results":"32","hashOfConfig":"27"},{"size":328,"mtime":1610295433258,"results":"33","hashOfConfig":"27"},{"size":1527,"mtime":1610295087431,"results":"34","hashOfConfig":"27"},{"size":257,"mtime":1610294912408,"results":"35","hashOfConfig":"27"},{"size":429,"mtime":1610183128054,"results":"36","hashOfConfig":"27"},{"size":446,"mtime":1610180963713,"results":"37","hashOfConfig":"27"},{"size":578,"mtime":1610277307915,"results":"38","hashOfConfig":"27"},{"size":2715,"mtime":1610297007658,"results":"39","hashOfConfig":"27"},{"size":1275,"mtime":1610287338980,"results":"40","hashOfConfig":"27"},{"size":343,"mtime":1610259946083,"results":"41","hashOfConfig":"27"},{"size":317,"mtime":1610256133518,"results":"42","hashOfConfig":"27"},{"size":129,"mtime":1610258663998,"results":"43","hashOfConfig":"27"},{"size":46,"mtime":1610256167611,"results":"44","hashOfConfig":"27"},{"size":298,"mtime":1610259918655,"results":"45","hashOfConfig":"27"},{"size":409,"mtime":1610259898236,"results":"46","hashOfConfig":"27"},{"size":528,"mtime":1610263312436,"results":"47","hashOfConfig":"27"},{"size":150,"mtime":1610267405928,"results":"48","hashOfConfig":"27"},{"size":194,"mtime":1610266943655,"results":"49","hashOfConfig":"27"},{"size":98,"mtime":1610279806494,"results":"50","hashOfConfig":"27"},{"size":1203,"mtime":1610288666923,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"15yx65o",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},"/mnt/d/ipsator/experiments/xebia/star-wars/src/index.js",[],["106","107"],"/mnt/d/ipsator/experiments/xebia/star-wars/src/reportWebVitals.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/App.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/api/index.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/components/login/index.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/atoms/Input.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/components/logo/StarWarsLogo.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/components/login/Login.js",["108"],"/mnt/d/ipsator/experiments/xebia/star-wars/src/atoms/RoundedButton.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/hooks/useUserData.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/services/StorageService.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/services/UserService.js",["109"],"import request from \"../api\";\nimport useUserData from \"../hooks/useUserData\";\n\nconst UserService = {\n  getAllUsers: () => {\n    let users = request({ url: \"api/people/\", cache: true });\n    console.log(\"users>\", users);\n    return users;\n  },\n  validateUser: async ({ username, password }) => {\n    const { results } = await UserService.getAllUsers();\n    return !!results.filter(\n      (user) => user.name === username && user.birth_year === password\n    ).length;\n  },\n\n  getCurrentUser: () => {\n    return { username: \"Luke Skywalker\" };\n  },\n};\n\nexport default UserService;\n","/mnt/d/ipsator/experiments/xebia/star-wars/src/components/dashboard/index.js",["110","111"],"/mnt/d/ipsator/experiments/xebia/star-wars/src/components/dashboard/SerachBar.js",["112","113"],"import React from \"react\";\nimport Input from \"../../atoms/Input\";\nimport UserService from \"../../services/UserService\";\nimport styles from \"../../styles/searchBar.module.css\";\n\nconst SearchBar = ({ searchQuery, suggetions, isValidQuery }) => {\n  console.log(\"stylesstylesstylesstyles:\", styles, isValidQuery);\n  let currentUser = UserService.getCurrentUser();\n  console.log(\"suggetions:::\", suggetions, isValidQuery);\n  const handleCharacterInput = (event) => {\n    const { name, value } = event.target;\n    searchQuery(value);\n  };\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        name=\"search-character\"\n        placeholder=\"Search Character\"\n        id=\"search-character\"\n        readOnly={!isValidQuery}\n        onChange={handleCharacterInput}\n      />\n      <div>\n        {suggetions.map(({ name, value, intensity }) => (\n          <>\n            <div className={`${styles[\"result-box\"]}`}>\n              <div className={` ${styles[intensity]}`}>\n                <div>{name}</div>\n                <div>{value}</div>\n                {/* <div>{intensity}</div> */}\n              </div>\n            </div>\n          </>\n        ))}\n      </div>\n      {!isValidQuery && <div>Only 15 queries are allowed in 1 mins</div>}\n    </>\n  );\n};\n\nexport default SearchBar;\n","/mnt/d/ipsator/experiments/xebia/star-wars/src/services/PlanetService.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/store/index.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/reducers/index.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/constants/actionTypes/PlanetActionTypes.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/reducers/PlanetReducer.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/actions/planetActions.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/hooks/useMatchedText.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/utils/StringUtils.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/constants/planets/PopulationRamge.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/utils/SortUtils.js",[],"/mnt/d/ipsator/experiments/xebia/star-wars/src/hooks/useValidator.js",["114","115"],"import { useEffect, useState } from \"react\";\n\nconst useSearchValidator = (str) => {\n  // 1) start Time;\n  // 2) storeSearch Count;\n  // 2) check if search count > 10 && timer elapsed less 60sec\n\n  const [searchCount, setsearchCount] = useState(-1);\n  const [intervalId, setIntervalId] = useState(null);\n  const [timedout, setTimeout] = useState(false);\n  const [isValid, setIsValid] = useState(null);\n\n  useEffect(() => {\n    setsearchCount(searchCount + 1);\n    checkValidation();\n  }, [str]);\n\n  useEffect(() => {\n    let intervalId = setInterval(() => {\n      setTimeout(true);\n      setIsValid(true);\n      setsearchCount(0);\n    }, 10000);\n    setIntervalId(intervalId);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const checkValidation = () => {\n    if (searchCount <= 15) {\n      console.log(\"sahi hai\");\n      setIsValid(true);\n    } else {\n      if (timedout) {\n        console.log(\"reset\", searchCount, timedout);\n        setsearchCount(0);\n        setIsValid(null);\n        setTimeout(false);\n      } else {\n        console.log(\"pause\", searchCount, timedout);\n        setIsValid(false);\n      }\n    }\n  };\n  return isValid;\n};\n\nexport default useSearchValidator;\n",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":19},{"ruleId":"120","severity":1,"message":"124","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":19},{"ruleId":"120","severity":1,"message":"125","line":19,"column":7,"nodeType":"122","messageId":"123","endLine":19,"endColumn":18},{"ruleId":"126","severity":1,"message":"127","line":63,"column":6,"nodeType":"128","endLine":63,"endColumn":8,"suggestions":"129"},{"ruleId":"120","severity":1,"message":"125","line":8,"column":7,"nodeType":"122","messageId":"123","endLine":8,"endColumn":18},{"ruleId":"120","severity":1,"message":"130","line":11,"column":13,"nodeType":"122","messageId":"123","endLine":11,"endColumn":17},{"ruleId":"120","severity":1,"message":"131","line":9,"column":10,"nodeType":"122","messageId":"123","endLine":9,"endColumn":20},{"ruleId":"126","severity":1,"message":"132","line":16,"column":6,"nodeType":"128","endLine":16,"endColumn":11,"suggestions":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'UserService' is defined but never used.","Identifier","unusedVar","'useUserData' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPlanets'. Either include it or remove the dependency array.","ArrayExpression",["136"],"'name' is assigned a value but never used.","'intervalId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'checkValidation' and 'searchCount'. Either include them or remove the dependency array. You can also do a functional update 'setsearchCount(s => ...)' if you only need 'searchCount' in the 'setsearchCount' call.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [fetchPlanets]",{"range":"142","text":"143"},"Update the dependencies array to be: [checkValidation, searchCount, str]",{"range":"144","text":"145"},[2067,2069],"[fetchPlanets]",[487,492],"[checkValidation, searchCount, str]"]